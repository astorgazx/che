#
# Copyright (c) 2020 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: Release Che Server

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version that is going to be released. Should be in format 7.y.z'
        required: true
        default: ''
      releaseParent:
        description: 'If true, will also release parent of the same version'
        required: true
        default: 'false'
      forceRecreateTags:
        description: 'If true, tags will be overriden and regenerated. Use with caution'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
          path: che
      - uses: actions/checkout@v2
        if: ${{ release_parent }}
        with:
          name: eclipse/che-parent
          ref: refs/heads/release
          path: che-parent
      - name: Check existing tag
        run: |
          if [[ "$FORCE_RECREATE_TAGS" == "false" ]] && [[ $(cd che && git ls-remote --exit-code origin refs/tags/${CHE_VERSION}) ]]; then
            echo "cannot create release, when tag already exists"
            exit 1
          fi
      - name: Login to docker.io
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          registry: docker.io
      - name: Login to quay.io
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
          registry: quay.io
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.7'
          java-package: jdk
          architecture: x64 
      - name: Set up environment
        run: |
          # install more repos
          sudo apt-get update -y || true
          # install more dependencies
          sudo apt-get -y -q install wget curl bash git 
          java -version

          # want git >=2.24, hub >=2
          hub --version # hub reports git version too

          # want >=5
          bash --version

          java -version
          which java
          javac -version
          which javac

          # do we need any of these?
          # docker-ce          x86_64  3:19.03.14-3.el7            docker-ce-stable   24 M
          # gcc-c++            x86_64  4.8.5-44.el7                base              7.2 M
          # nodejs             x86_64  2:10.23.0-1nodesource       nodesource         20 M
          # yarn               noarch  1.22.5-1                    yarn              1.2 M
      - name: Release
        run: |
          CHE_VERSION="${{ github.event.inputs.version }}"
          echo "CHE_VERSION=${CHE_VERSION}"
          PHASES="${{ github.event.inputs.phases }}"
          echo "PHASES=${PHASES}"
          sed -i VERSION -r -e "s#PHASES=.*#PHASES=${PHASES}#"

          export CHE_MAVEN_SETTINGS=${{ secrets.CHE_MAVEN_SETTINGS}}
          export CHE_OSS_SONATYPE_GPG_KEY=${{ secrets.CHE_OSS_SONATYPE_GPG_KEY}}
          export CHE_OSS_SONATYPE_PASSPHRASE=${{ secrets.CHE_OSS_SONATYPE_PASSPHRASE}}
          export CHE_GITHUB_SSH_KEY=${{ secrets.CHE_GITHUB_SSH_KEY}}
          export CHE_NPM_AUTH_TOKEN=${{ secrets.CHE_NPM_AUTH_TOKEN}}

          export QUAY_ECLIPSE_CHE_USERNAME=${{ secrets.QUAY_USERNAME }}
          export QUAY_ECLIPSE_CHE_PASSWORD=${{ secrets.QUAY_PASSWORD }}
          git config --global user.name "Mykhailo Kuznietsov"
          git config --global user.email "mkuznets@redhat.com"
          export GITHUB_TOKEN=${{ secrets.CHE_BOT_GITHUB_TOKEN }}
          export CHE_BOT_GITHUB_TOKEN=${{ secrets.CHE_BOT_GITHUB_TOKEN }}
          set -e
          # determine which OS we're using: rhel or ubuntu
          cat /etc/os-release || true
          ./make-release.sh ubuntu
